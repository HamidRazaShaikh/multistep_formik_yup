[{"E:\\react\\bootcamp\\multistep_formik_yup\\src\\index.tsx":"1","E:\\react\\bootcamp\\multistep_formik_yup\\src\\reportWebVitals.ts":"2","E:\\react\\bootcamp\\multistep_formik_yup\\src\\App.tsx":"3","E:\\react\\bootcamp\\multistep_formik_yup\\src\\components\\signup.tsx":"4","E:\\react\\bootcamp\\multistep_formik_yup\\src\\components\\mainForm.tsx":"5","E:\\react\\bootcamp\\multistep_formik_yup\\src\\components\\pdf.tsx":"6","E:\\react\\bootcamp\\multistep_formik_yup\\src\\components\\nav.tsx":"7"},{"size":499,"mtime":1610869974256,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1606701893145,"results":"10","hashOfConfig":"9"},{"size":663,"mtime":1610881361437,"results":"11","hashOfConfig":"9"},{"size":5419,"mtime":1610881297672,"results":"12","hashOfConfig":"9"},{"size":14817,"mtime":1610881049260,"results":"13","hashOfConfig":"9"},{"size":8457,"mtime":1610881230388,"results":"14","hashOfConfig":"9"},{"size":2714,"mtime":1610881421499,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1qlc5ni",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\bootcamp\\multistep_formik_yup\\src\\index.tsx",[],["32","33"],"E:\\react\\bootcamp\\multistep_formik_yup\\src\\reportWebVitals.ts",[],"E:\\react\\bootcamp\\multistep_formik_yup\\src\\App.tsx",[],"E:\\react\\bootcamp\\multistep_formik_yup\\src\\components\\signup.tsx",[],"E:\\react\\bootcamp\\multistep_formik_yup\\src\\components\\mainForm.tsx",["34"],"import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, FormikConfig, FormikValues } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  CardContent,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  createStyles,\r\n  makeStyles,\r\n  Hidden,\r\n  MobileStepper,\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport MenuAppBar from \"./nav\";\r\nimport { CheckboxWithLabel, TextField } from \"formik-material-ui\";\r\nimport { object, mixed, string } from \"yup\";\r\nimport PDF from \"./pdf\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // Purple and green play nicely together.\r\n      main: \"#546E7A\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  userData: any;\r\n};\r\n\r\nconst MainForm: React.FC<Props> = ({ userData }) => {\r\n  const sleep = (time: number) => new Promise((acc) => setTimeout(acc, time));\r\n  const [data, setData] = useState({});\r\n  const [show, setShow] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MenuAppBar />\r\n\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} sm={6} lg={6}>\r\n          <CardContent>\r\n            <CardContent>\r\n              <FormikStepper\r\n                initialValues={{\r\n                  name: \"\",\r\n                  cell: \"\",\r\n                  email: \"\",\r\n                  address: \"\",\r\n                  employed: false,\r\n                  employerName: \"\",\r\n                  employerAddress: \"\",\r\n                  school: \"\",\r\n                  statusSchool: \"\",\r\n                  sessionSchool: \"\",\r\n\r\n                  college: \"\",\r\n                  statusCollege: \"\",\r\n                  sessionCollege: \"\",\r\n\r\n                  university: \"\",\r\n                  statusUni: \"\",\r\n                  sessionUni: \"\",\r\n\r\n                  objective: \"\",\r\n                  computerSkills: \"\",\r\n                  languages: \"\",\r\n                }}\r\n                onSubmit={async (values) => {\r\n                  await sleep(3000);\r\n                  setData(values);\r\n                  setShow(true);\r\n                }}\r\n              >\r\n                <FormikStep\r\n                  label=\"Personal info\"\r\n                  validationSchema={object().shape({\r\n                    name: string().required(\"this feild is required.\"),\r\n                    cell: string().required(\"this feild is required.\"),\r\n                    email: string().email().required(\"this feild is required.\"),\r\n                    address: string().required(\"this feild is required.\"),\r\n                  })}\r\n                >\r\n                  <Box paddingBottom={2}>\r\n                    <Field\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      component={TextField}\r\n                      label=\"Name\"\r\n                    />\r\n                  </Box>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item>\r\n                      <Box paddingBottom={2}>\r\n                        <Field\r\n                          fullWidth\r\n                          name=\"cell\"\r\n                          component={TextField}\r\n                          label=\"Cell No\"\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Box paddingBottom={2}>\r\n                        <Field\r\n                          fullWidth\r\n                          name=\"email\"\r\n                          component={TextField}\r\n                          label=\"Email address\"\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Box paddingBottom={2}>\r\n                    <Field\r\n                      fullWidth\r\n                      name=\"address\"\r\n                      component={TextField}\r\n                      label=\"Address\"\r\n                    />\r\n                  </Box>\r\n                  <Box paddingBottom={2}>\r\n                    <Field\r\n                      name=\"employed\"\r\n                      type=\"checkbox\"\r\n                      component={CheckboxWithLabel}\r\n                      label=\"Are you employed?\"\r\n                    />\r\n                  </Box>\r\n                </FormikStep>\r\n                <FormikStep\r\n                  label=\"employer details\"\r\n                  validationSchema={object().shape({\r\n                    employerName: mixed().when(\"employed\", {\r\n                      is: true,\r\n                      then: string().required(\"this field is required\"),\r\n                      otherwise: string(),\r\n                    }),\r\n\r\n                    employerAddress: mixed().when(\"employed\", {\r\n                      is: true,\r\n                      then: string().required(\"this field is required\"),\r\n                      otherwise: string(),\r\n                    }),\r\n                  })}\r\n                >\r\n                  <Box paddingBottom={2}>\r\n                    <Field\r\n                      fullWidth\r\n                      name=\"employerName\"\r\n                      component={TextField}\r\n                      label=\"Employer Name\"\r\n                    />\r\n                  </Box>\r\n                  <Box paddingBottom={2}>\r\n                    <Field\r\n                      fullWidth\r\n                      name=\"employerAddress\"\r\n                      component={TextField}\r\n                      label=\"Employer Address\"\r\n                    />\r\n                  </Box>\r\n                </FormikStep>\r\n                <FormikStep label=\"education\">\r\n                  <Box paddingBottom={2}>\r\n                    <Typography>Matriculation</Typography>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item>\r\n                        <Field\r\n                          fullWidth\r\n                          name=\"school\"\r\n                          component={TextField}\r\n                          label=\"School Name\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Field\r\n                          fullWidth\r\n                          name=\"statusSchool\"\r\n                          component={TextField}\r\n                          label=\"status\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Field\r\n                          fullWidth\r\n                          name=\"sessionSchool\"\r\n                          component={TextField}\r\n                          label=\"session\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                  <Box paddingBottom={2}>\r\n                    <Typography>Bachelor's</Typography>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item>\r\n                        <Field\r\n                          fullWidth\r\n                          name=\"college\"\r\n                          component={TextField}\r\n                          label=\"college Name\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Field\r\n                          fullWidth\r\n                          name=\"statusCollege\"\r\n                          component={TextField}\r\n                          label=\"status\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Field\r\n                          fullWidth\r\n                          name=\"sessionCollege\"\r\n                          component={TextField}\r\n                          label=\"session\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                  <Box paddingBottom={2}>\r\n                    <Typography>Masters</Typography>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item>\r\n                        <Field\r\n                          fullWidth\r\n                          name=\"university\"\r\n                          component={TextField}\r\n                          label=\"university Name\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Field\r\n                          fullWidth\r\n                          name=\"statusUni\"\r\n                          component={TextField}\r\n                          label=\"status\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Field\r\n                          fullWidth\r\n                          name=\"sessionUni\"\r\n                          component={TextField}\r\n                          label=\"session\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </FormikStep>\r\n                <FormikStep\r\n                  label=\"More Info\"\r\n                  validationSchema={object().shape({\r\n                    objective: string().required(\"this feild is required.\"),\r\n                    languages: string().required(\"this feild is required.\"),\r\n                  })}\r\n                >\r\n                  <Box paddingBottom={2}>\r\n                    <Typography>Objective</Typography>\r\n                    <Field\r\n                      fullWidth\r\n                      multiline\r\n                      rows={4}\r\n                      name=\"objective\"\r\n                      component={TextField}\r\n                      label=\"Describe your objective in not less than 20 words.\"\r\n                    />\r\n                  </Box>\r\n                  <Box paddingBottom={2}>\r\n                    <Typography>Computer skills</Typography>\r\n                    <Field\r\n                      fullWidth\r\n                      name=\"computerSkills\"\r\n                      component={TextField}\r\n                      label=\"computer skills separated by ','\"\r\n                    />\r\n                  </Box>\r\n                  <Box paddingBottom={2}>\r\n                    <Typography>Languages</Typography>\r\n                    <Field\r\n                      fullWidth\r\n                      name=\"languages\"\r\n                      component={TextField}\r\n                      label=\"names separated by ','\"\r\n                    />\r\n                  </Box>\r\n                </FormikStep>\r\n              </FormikStepper>\r\n            </CardContent>\r\n            {show && (\r\n              <Grid item xs={12}>\r\n                <Button>\r\n                  <PDF data={data} />\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport interface FormikStepProps\r\n  extends Pick<FormikConfig<FormikValues>, \"children\" | \"validationSchema\"> {\r\n  label: string;\r\n}\r\n\r\nexport function FormikStep({ children }: FormikStepProps) {\r\n  return <>{children}</>;\r\n}\r\n\r\nexport function FormikStepper({\r\n  children,\r\n  ...props\r\n}: FormikConfig<FormikValues>) {\r\n  const childrenArray = React.Children.toArray(\r\n    children\r\n  ) as React.ReactElement<FormikStepProps>[];\r\n\r\n  const [step, setStep] = useState(0);\r\n  const [completed, setCompleted] = useState(false);\r\n  const currentChild = childrenArray[step];\r\n  const [data, setData] = useState({});\r\n\r\n  function isLastStep() {\r\n    return step === childrenArray.length - 1;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <Formik\r\n          {...props}\r\n          validationSchema={currentChild.props.validationSchema}\r\n          onSubmit={async (values, helpers) => {\r\n            if (isLastStep()) {\r\n              await props.onSubmit(values, helpers);\r\n              setCompleted(true);\r\n              setData(values);\r\n            } else {\r\n              setStep((s) => s + 1);\r\n            }\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form>\r\n              <Hidden xsDown>\r\n                <ThemeProvider theme={theme}>\r\n                  <Stepper alternativeLabel activeStep={step}>\r\n                    {childrenArray.map((child, index) => (\r\n                      <Step\r\n                        key={child.props.label}\r\n                        completed={step > index || completed}\r\n                      >\r\n                        <StepLabel>{child.props.label}</StepLabel>\r\n                      </Step>\r\n                    ))}\r\n                  </Stepper>\r\n                </ThemeProvider>\r\n              </Hidden>\r\n              <Hidden smUp>\r\n                <ThemeProvider theme={theme}>\r\n                  <MobileStepper\r\n                    steps={4}\r\n                    position=\"top\"\r\n                    variant=\"dots\"\r\n                    style={{ marginTop: 50 }}\r\n                    activeStep={step}\r\n                    nextButton={<Button size=\"small\" disabled></Button>}\r\n                    backButton={<Button size=\"small\" disabled></Button>}\r\n                  />\r\n                </ThemeProvider>\r\n              </Hidden>\r\n\r\n              {currentChild}\r\n              <Grid container spacing={3}>\r\n                {step > 0 ? (\r\n                  <Grid item xs={4}>\r\n                    <Button\r\n                      disabled={isSubmitting}\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      style={{ backgroundColor: \"#78909C\" }}\r\n                      onClick={() => setStep((s) => s - 1)}\r\n                    >\r\n                      {\" \"}\r\n                      Back{\" \"}\r\n                    </Button>\r\n                  </Grid>\r\n                ) : null}\r\n                <Grid item xs={4}>\r\n                  <Button\r\n                    startIcon={\r\n                      isSubmitting ? <CircularProgress size=\"1rem\" /> : null\r\n                    }\r\n                    disabled={isSubmitting}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    style={{ backgroundColor: \"#78909C\" }}\r\n                  >\r\n                    {isSubmitting\r\n                      ? \"Submitting\"\r\n                      : isLastStep()\r\n                      ? \"Submit\"\r\n                      : \" Next\"}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MainForm;\r\n","E:\\react\\bootcamp\\multistep_formik_yup\\src\\components\\pdf.tsx",["35"],"E:\\react\\bootcamp\\multistep_formik_yup\\src\\components\\nav.tsx",["36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":344,"column":10,"nodeType":"43","messageId":"44","endLine":344,"endColumn":14},{"ruleId":"45","severity":1,"message":"46","line":270,"column":3,"nodeType":"43","endLine":270,"endColumn":12,"suggestions":"47"},{"ruleId":"41","severity":1,"message":"48","line":28,"column":16,"nodeType":"43","messageId":"44","endLine":28,"endColumn":23},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setOpen'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["51"],"'setAuth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Add dependencies array: []",{"range":"54","text":"55"},[7572,7572],", []"]